@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <!-- This is the hidden form that our JavaScript will submit. -->
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" style="display: none;">
            </form>

            <!-- This is the visible link that triggers our confirmation modal. -->
            <a href="#" class="nav-link text-dark" data-toggle="modal" data-target="#logoutConfirmModal">Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <!-- Changed from asp-page to a class-based trigger for our JS. -->
            <a class="nav-link text-dark register-modal-trigger" href="#">Register</a>
        </li>
        <li class="nav-item">
            <!-- Changed from asp-page to a class-based trigger for our JS. -->
            <a class="nav-link text-dark login-modal-trigger" href="#">Login</a>
        </li>
    }
</ul>