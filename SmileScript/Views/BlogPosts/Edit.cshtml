@model SmileScript.ViewModels.BlogPostViewModel
@using SmileScript.Enums

@{
    ViewData["Title"] = "Edit Blog Post";
}

<h1>Edit Blog Post</h1>
<hr />
<div class="row">
    <div class="col-md-12">
        <form id="post-form" asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="BlogPost.Id" />

            <div class="form-group">
                <label asp-for="BlogPost.Title" class="control-label"></label>
                <input asp-for="BlogPost.Title" class="form-control" />
                <span asp-validation-for="BlogPost.Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BlogPost.CategoryId" class="control-label">Category</label>
                <select asp-for="BlogPost.CategoryId" class="form-control" asp-items="Model.CategoryList"></select>
                <span asp-validation-for="BlogPost.CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="HeaderImage" class="control-label"></label>
                @if (!string.IsNullOrEmpty(Model.BlogPost.HeaderImageUrl))
                {
                    <p>Current Image: <img src="@Model.BlogPost.HeaderImageUrl" style="max-width: 200px;" /></p>
                }
                <input asp-for="HeaderImage" class="form-control-file" />
                <span asp-validation-for="HeaderImage" class="text-danger"></span>
            </div>

            @if (User.IsInRole("Admin"))
            {
                <div class="form-group">
                    <label asp-for="BlogPost.Status" class="control-label"></label>
                    <select asp-for="BlogPost.Status" asp-items="Html.GetEnumSelectList<PostStatus>()" class="form-control"></select>
                    <span asp-validation-for="BlogPost.Status" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <label asp-for="BlogPost.Content" class="control-label"></label>
                <div id="editor-md-container">
                    <textarea asp-for="BlogPost.Content" style="display:none;">@Model.BlogPost.Content</textarea>
                </div>
                <span asp-validation-for="BlogPost.Content" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <button id="submit-button" type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $(function () {
            var editor = editormd("editor-md-container", {
                width: "100%",
                height: 640,
                path: "https://cdn.jsdelivr.net/npm/editor.md@1.5.0/lib/",
                saveHTMLToTextarea: true,
                imageUpload: true,
                imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
                imageUploadURL: "/BlogPosts/UploadImage"
            });

            // --- THE FINAL, CORRECTED AND GUARANTEED FIX ---
            $("#submit-button").on('click', function (e) {
                // 1. Prevent all default actions
                e.preventDefault();

                // 2. Sync the textarea content
                var markdownContent = editor.getMarkdown();
                $("#BlogPost_Content").val(markdownContent);

                // 3. Forcefully set the correct destination URL, including the post's ID
                var postId = $("#BlogPost_Id").val();
                $("#post-form").attr('action', '/BlogPosts/Edit/' + postId);

                // 4. Submit the form
                $("#post-form").submit();
            });
        });
    </script>
}